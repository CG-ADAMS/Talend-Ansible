---

# This script used for updating current application parameters if the application is already installed
# It can be run just after the installation or after some time (re-configuration)
# Some parameters cannot be re-configured (installation path, user, group, tomcat deployment, systemd status)
# All other parameters must be reconfigured here

#
# Work with IAM 
#
- name: Update oidc.url
  file:
    path: "{{ mdm_config_location }}/mdm.conf"
    regexp:  '^oidc\.url=.*'
    replace: "oidc.url={{ mdm_oidc_url }}"

- name: Update oidc.userauth.url
  file:
    path: "{{ mdm_config_location }}/mdm.conf"
    regexp:  '^oidc\.userauth\.url=.*'
    replace: "oidc.userauth.url={{ mdm_oidc_userauth_url }}"
    
- name: Update scim.url
  file:
    path: "{{ mdm_config_location }}/mdm.conf"
    regexp:  '^scim\.url=.*'
    replace: "scim.url={{ mdm_scim_url }}"

#
# Work with TDS 
#
- name: Update TDS URL
  file:
    path: "{{ mdm_config_location }}/mdm.conf"
    regexp:  '^tds\.root\.url=.*'
    replace: "tds.root.url={{ mdm_tds_root_url }}"

- name: Update TDS User
  file:
    path: "{{ mdm_config_location }}/mdm.conf"
    regexp:  '^tds\.user=.*'
    replace: "tds.user={{ mdm_tds_user }}"
    
- name: Update TDS Password
  file:
    path: "{{ mdm_config_location }}/mdm.conf"
    regexp:  '^tds\.password=.*'
    replace: "tds.password={{ mdm_tds_password }}"

#
# Work with LogServer (Audit)
#
- name: Update audit configuration
  when: mdm_use_audit == 'yes'
  file:
    path: "{{ mdm_config_location }}/audit.properties"
    regexp:  '^appender\.http\.url=.*'
    replace: "appender.http.url=http://{{ mdm_audit_server_host }}:{{ mdm_audit_server_port }}/"

#
# Update database parameters
#

#
# Copy DB Driver
#
- name: Copy DB Driver
  when: mdm_database != "h2"
  copy:
    src: {{ mdm_db_driver }}
    dest: "{{ install_prefix + '/' + mdm_folder + '/apache-tomcat/lib/' + mdm_database + '.driver.jar' }}"
    owner: root
    group: root
    mode: 0644

# 
# For H2 database
#
- name: Update Datasource of mdm.conf
  when: mdm_database == "h2"
  replace:
    path: "{{ mdm_config_location }}/mdm.conf"
    regexp:  '^db\.default\.datasource=.*'
    replace: "db.default.datasource=H2-Default"

- name: Update DB Driver
  when: mdm_database == "h2"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdriverclassh2$$'
    replace: "org.h2.Driver"
    
- name: Update DB User
  when: mdm_database == "h2"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbuserh2$$'
    replace: "{{ mdm_db_user }}"
    
- name: Update DB Password
  when: mdm_database == "h2"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbpasswordh2$$'
    replace: "{{ mdm_db_password }}"
    
- name: Update Fulltext Index Directory
  when: mdm_database == "h2"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmsearchindexdirh2$$'
    replace: "{{ mdm_search_index_dir }}"
    
- name: Update Master URL
  when: mdm_database == "h2"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdburlh2$$_MASTER'
    replace: "jdbc:h2://{{ install_prefix }}/mdm/data/h2-default/{{ mdm_db_name }}_MASTER;DB_CLOSE_ON_EXIT=FALSE"
    
- name: Update Staging URL
  when: mdm_database == "h2"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdburlh2$$_STAGING'
    replace: "jdbc:h2://{{ install_prefix }}/mdm/data/h2-default/{{ mdm_db_name }}_STAGING;DB_CLOSE_ON_EXIT=FALSE"

- name: Update System URL
  when: mdm_database == "h2"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbsmallurlh2$$/TMDM_DB_SYSTEM'
    replace: "jdbc:h2://{{ install_prefix }}/mdm/data/h2-default/TMDM_DB_SYSTEM;DB_CLOSE_ON_EXIT=FALSE"

#
# For MySQL8/MySQL database
#
- name: Update Datasource of mdm.conf
  when: mdm_database == "mysql8" or mdm_database == "mysql"
  replace:
    path: "{{ mdm_config_location }}/mdm.conf"
    regexp:  '^db\.default\.datasource=.*'
    replace: "db.default.datasource=MySQL-Default"

- name: Update MySQL8 DB Driver
  when: mdm_database == "mysql8"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdriverclassmysql$$'
    replace: "com.mysql.cj.jdbc.Driver"
    
- name: Update MySQL DB Driver
  when: mdm_database == "mysql"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdriverclassmysql$$'
    replace: "com.mysql.jdbc.Driver"
    
- name: Update DB URL
  when: mdm_database == "mysql8" or mdm_database == "mysql"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdburlmysql$$'
    replace: "jdbc:mysql://{{ mdm_db_host }}:{{ mdm_db_port }}/{{ mdm_db_name }}"
    
- name: Update DB User
  when: mdm_database == "mysql8" or mdm_database == "mysql"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbusermysql$$'
    replace: "{{ mdm_db_user }}"
    
- name: Update DB Password
  when: mdm_database == "mysql8" or mdm_database == "mysql"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbpasswordh2$$'
    replace: "{{ mdm_db_password }}"
    
- name: Update Fulltext Index Directory
  when: mdm_database == "mysql8" or mdm_database == "mysql"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmsearchindexdirmysql$$'
    replace: "{{ mdm_search_index_dir }}"

- name: Update DB Name
  when: mdm_database == "mysql8" or mdm_database == "mysql"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbnamemysql$$'
    replace: "{{ mdm_db_name }}"
    
- name: Update DB Small URL
  when: mdm_database == "mysql8" or mdm_database == "mysql"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbsmallurlmysql$$'
    replace: "jdbc:mysql://{{ mdm_db_host }}:{{ mdm_db_port }}"

#
# For Oracle database
#
- name: Update Datasource of mdm.conf
  when: mdm_database == "oracle"
  replace:
    path: "{{ mdm_config_location }}/mdm.conf"
    regexp:  '^db\.default\.datasource=.*'
    replace: "db.default.datasource=Oracle-Default"

- name: Update DB Driver
  when: mdm_database == "oracle"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdriverclassoracle$$'
    replace: "oracle.jdbc.driver.OracleDriver"
    
- name: Update DB URL
  when: mdm_database == "oracle"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdburloracle$$'
    replace: "jdbc:oracle:thin:@{{ mdm_db_host }}:{{ mdm_db_port }}:{{ mdm_db_name }}"
    
- name: Update Fulltext Index Directory
  when: mdm_database == "oracle"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmsearchindexdiroracle$$'
    replace: "{{ mdm_search_index_dir }}"

# Master    
- name: Update Master User
  when: mdm_database == "oracle"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbuseroracle$$'
    replace: "{{ mdm_db_user }}"
    
- name: Update Master Password
  when: mdm_database == "oracle"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbpasswordoracle$$'
    replace: "{{ mdm_db_password }}"
    
- name: Update Master Schema
  when: mdm_database == "oracle"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmschemaofcontaineroracle$$'
    replace: "{{ mdm_db_schema }}"

# Staging
- name: Update Staging User
  when: mdm_database == "oracle"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbuserstagingoracle$$'
    replace: "{{ mdm_db_staging_user }}"
    
- name: Update Staging Password
  when: mdm_database == "oracle"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbpasswordstagingoracle$$'
    replace: "{{ mdm_db_staging_password }}"
    
- name: Update Staging Schema
  when: mdm_database == "oracle"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmschemaofstagingareaoracle$$'
    replace: "{{ mdm_db_staging_schema }}"

# System
- name: Update System User
  when: mdm_database == "oracle"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbusersystemoracle$$'
    replace: "{{ mdm_db_system_user }}"
    
- name: Update System Password
  when: mdm_database == "oracle"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbpasswordsystemoracle$$'
    replace: "{{ mdm_db_system_password }}"
    
- name: Update System Schema
  when: mdm_database == "oracle"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmschemaofsystemobjectsoracle$$'
    replace: "{{ mdm_db_system_schema }}"
    
#
# For Microsoft SQL
#
- name: Update Datasource of mdm.conf
  when: mdm_database == "mssql"
  replace:
    path: "{{ mdm_config_location }}/mdm.conf"
    regexp:  '^db\.default\.datasource=.*'
    replace: "db.default.datasource=SQLServer-Default"

- name: Update DB Driver
  when: mdm_database == "mssql"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdriverclassoracle$$'
    replace: "com.microsoft.sqlserver.jdbc.SQLServerDriver"
    
- name: Update DB URL
  when: mdm_database == "mssql"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdburlsqlserver$$'
    replace: "jdbc:sqlserver://{{ mdm_db_host }}:{{ mdm_db_port }};databaseName={{ mdm_db_name }}"
    
- name: Update DB User
  when: mdm_database == "mssql"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbusersqlserver$$'
    replace: "{{ mdm_db_user }}"
    
- name: Update DB Password
  when: mdm_database == "mssql"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbpasswordsqlserver$$'
    replace: "{{ mdm_db_password }}"
    
- name: Update Fulltext Index Directory
  when: mdm_database == "mssql"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmsearchindexdirsqlserver$$'
    replace: "{{ mdm_search_index_dir }}"
    
- name: Update DB Name
  when: mdm_database == "mssql"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbnamesqlserver$$'
    replace: "{{ mdm_db_name }}"
    
- name: Update DB Small URL
  when: mdm_database == "mssql"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbsmallurlsqlserver$$'
    replace: "jdbc:sqlserver://{{ mdm_db_host }}:{{ mdm_db_port }}"

#
# For PostgreSQL
#
- name: Update Datasource of mdm.conf
  when: mdm_database == "postgresql"
  replace:
    path: "{{ mdm_config_location }}/mdm.conf"
    regexp:  '^db\.default\.datasource=.*'
    replace: "db.default.datasource=PostgreSQL-Default"

- name: Update DB Driver
  when: mdm_database == "postgresql"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdriverclasspostgressql$$'
    replace: "org.postgresql.Driver"

- name: Update DB URL
  when: mdm_database == "postgresql"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdburlpostgressql$$'
    replace: "jdbc:postgresql://{{ mdm_db_host }}:{{ mdm_db_port }}/{{ mdm_db_name }}"
    
- name: Update DB User
  when: mdm_database == "postgresql"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbuserpostgressql$$'
    replace: "{{ mdm_db_user }}"
    
- name: Update DB Password
  when: mdm_database == "postgresql"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbpasswordpostgressql$$'
    replace: "{{ mdm_db_password }}"
    
- name: Update Fulltext Index Directory
  when: mdm_database == "postgresql"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmsearchindexdirpostgressql$$'
    replace: "{{ mdm_search_index_dir }}"

- name: Update DB Name
  when: mdm_database == "postgresql"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbnamepostgressql$$'
    replace: "{{ mdm_db_name }}"
    
- name: Update DB Small URL
  when: mdm_database == "postgresql"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbsmallurlpostgressql$$'
    replace: "jdbc:sqlserver://{{ mdm_db_host }}:{{ mdm_db_port }}"
    
#
# For DB2
#
- name: Update Datasource of mdm.conf
  when: mdm_database == "db2"
  replace:
    path: "{{ mdm_config_location }}/mdm.conf"
    regexp:  '^db\.default\.datasource=.*'
    replace: "db.default.datasource=DB2-Default"

- name: Update DB Driver
  when: mdm_database == "db2"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdriverclassoracle$$'
    replace: "com.ibm.db2.jcc.DB2Driver"
    
- name: Update DB URL
  when: mdm_database == "db2"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdburldb2$$'
    replace: "jdbc:db2://{{ mdm_db_host }}:{{ mdm_db_port }}/{{ mdm_db_name }}"
    
- name: Update Fulltext Index Directory
  when: mdm_database == "db2"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmsearchindexdirdb2$$'
    replace: "{{ mdm_search_index_dir }}"

# Master    
- name: Update Master User
  when: mdm_database == "db2"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbuserdb2$$'
    replace: "{{ mdm_db_user }}"
    
- name: Update Master Password
  when: mdm_database == "db2"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbpassworddb2$$'
    replace: "{{ mdm_db_password }}"
    
- name: Update Master Schema
  when: mdm_database == "db2"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmschemaofcontainerdb2$$'
    replace: "{{ mdm_db_schema }}"

# Staging
- name: Update Staging User
  when: mdm_database == "db2"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbuserstagingdb2$$'
    replace: "{{ mdm_db_staging_user }}"
    
- name: Update Staging Password
  when: mdm_database == "db2"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbpasswordstagingdb2$$'
    replace: "{{ mdm_db_staging_password }}"
    
- name: Update Staging Schema
  when: mdm_database == "db2"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmschemaofstagingareadb2$$'
    replace: "{{ mdm_db_staging_schema }}"

# System
- name: Update System User
  when: mdm_database == "db2"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbusersystemdb2$$'
    replace: "{{ mdm_db_system_user }}"
    
- name: Update System Password
  when: mdm_database == "db2"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmdbpasswordsystemdb2$$'
    replace: "{{ mdm_db_system_password }}"
    
- name: Update System Schema
  when: mdm_database == "db2"
  replace:
    path: "{{ mdm_config_location }}/datasources.xml"
    regexp:  '$$mdmschemaofsystemobjectsdb2$$'
    replace: "{{ mdm_db_system_schema }}"